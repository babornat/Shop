@page "/vybaveni"
@page "/co"
@inject HttpClient Http

<PageTitle>Vybaveni e-shopu</PageTitle>
@if (!isInNewMode)
{
    <button @onclick="@(() => {isInNewMode = true; newEntity = new(){IsInEditMode = true, Name="novota" }; })" class="twbtn bg-blue-500 my-2">
        Přidej nový produkt
    </button>
}
<h3>Vybavení:</h3>

@if (seznamVybaveni == null)
{
   <Loader/>
    return;
}


<table class="table">

    <thead >
        <tr>
            <th>Název</th>
            <th>Datum naskladnění</th>
            <th>Datum poslední revize</th>
            <th>Potřebuje revizi?</th>
            <th>Cena</th>
        </tr>
    </thead>
    <tbody>
    @if (isInNewMode && newEntity != null)
    {
        <VybaveniRow EditDoneCallback="async (success) => { if(success) await AddEntity(newEntity) ; isInNewMode = false; }" Item=newEntity>
             <td> <button class="bg-success rounded-sm text-sm px-2 py-1">Přidej</button></td>
           <td> <button type="button" @onclick="() => isInNewMode = false" class="bg-warning rounded-sm text-sm px-2 py-1">Zrušit</button></td>
        </VybaveniRow>

    }


    @foreach (var item in seznamVybaveni)
    {
        <VybaveniRow EditDoneCallback="async (success) => {if(success) await UpdateEntity(item);}" Item=item DeleteItemCallback="() => DeleteVybaveni(item)" />
    }
    </tbody>
</table>

@code {

    bool isInNewMode;
    VybaveniModel? newEntity;
    List<VybaveniModel>? seznamVybaveni;



    protected override async Task OnInitializedAsync()
    {
        seznamVybaveni = await Http.GetFromJsonAsync<List<VybaveniModel>?>("vybaveni");
    }


    async Task DeleteVybaveni(VybaveniModel item)
    {
        var resp = await Http.DeleteAsync($"vybaveni/{item.Id}");

        if (resp.IsSuccessStatusCode)
            seznamVybaveni?.Remove(item);
    }

    async Task AddEntity(VybaveniModel item)
    {
        var resp = await Http.PostAsJsonAsync("vybaveni", item);
        if (!resp.IsSuccessStatusCode) return;

        item.Id = await resp.Content.ReadFromJsonAsync<Guid>();
        seznamVybaveni?.Insert(0, item);
    }

    async Task UpdateEntity(VybaveniModel item)
    {
        var resp = await Http.PutAsJsonAsync("vybaveni", item);
    }


}
